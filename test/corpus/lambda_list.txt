================================================================================
lambda_list - &rest
================================================================================

(defun f (&rest args))

--------------------------------------------------------------------------------

(source
  (defun name: (symbol) 
    (lambda_list (rest (symbol))))
  )

================================================================================
lambda_list - &optional single var
================================================================================

(defun f (&optional x))
(defun f (&optional (x 1)))
(defun f (&optional (x 1 xp)))

--------------------------------------------------------------------------------

(source
  (defun name: (symbol) 
    (lambda_list (optional var: (symbol))))

  (defun name: (symbol) 
    (lambda_list (optional var: (symbol) init: (number))))

  (defun name: (symbol) 
    (lambda_list (optional var: (symbol) init: (number) p: (symbol))))
  )

================================================================================
lambda_list - &optional multiple vars
================================================================================

(defun f (&optional x y))
(defun f (&optional x (y 1)))
(defun f (&optional x (y 1) z))

--------------------------------------------------------------------------------

(source
  (defun name: (symbol) 
    (lambda_list (optional var: (symbol) var: (symbol))))

  (defun name: (symbol) 
    (lambda_list (optional var: (symbol)
                           var: (symbol) init: (number))))

  (defun name: (symbol) 
    (lambda_list (optional var: (symbol)
                           var: (symbol) init: (number)
                           var: (symbol))))
  )

================================================================================
lambda_list - &rest and &optional
================================================================================

(defun f (&rest args &optional x))

--------------------------------------------------------------------------------

(source
  (defun name: (symbol) 
    (lambda_list (rest (symbol))
                 (optional var: (symbol))))
  )

================================================================================
lambda_list - &key simple
================================================================================

(defun f (&key x y))
(defun f (&key (x) y))
(defun f (&key (x 1) (y 2)))
(defun f (&key (x 1) (y 2) &allow-other-keys))

--------------------------------------------------------------------------------

(source
  (defun name: (symbol) 
    (lambda_list (key var: (symbol) var: (symbol))))

  (defun name: (symbol) 
    (lambda_list (key var: (symbol) var: (symbol))))

  (defun name: (symbol) 
    (lambda_list (key var: (symbol) init: (number)
                      var: (symbol) init: (number))))

  (defun name: (symbol) 
    (lambda_list (key var: (symbol) init: (number)
                      var: (symbol) init: (number)
                      (allow_other_keys))))
  )

================================================================================
lambda_list - &key with keyword-name
================================================================================

(defun f (&key ((:y        x))))
(defun f (&key ((y         x))))
(defun f (&key ((keyword:y x))))

--------------------------------------------------------------------------------

(source
  (defun name: (symbol) 
    (lambda_list (key kwd_name: (keyword (pkg_mark) (symbol)) 
                      var: (symbol))))

  (defun name: (symbol) 
    (lambda_list (key kwd_name: (symbol) 
                      var: (symbol))))

  (defun name: (symbol) 
    (lambda_list (key kwd_name: (package pkg: (symbol) (pkg_mark) sym: (symbol)) 
                      var: (symbol))))
  )

================================================================================
lambda_list - &key with supplied-p-parameter
================================================================================

(defun f (&key (x 1 xp)))
(defun f (&key ((:x x) 1 xp)))

--------------------------------------------------------------------------------

(source
  (defun name: (symbol) 
    (lambda_list (key var: (symbol) init: (number) p: (symbol))))

  (defun name: (symbol) 
    (lambda_list (key kwd_name: (keyword (pkg_mark) (symbol)) 
                      var: (symbol)
                      init: (number)
                      p: (symbol))))
  )

